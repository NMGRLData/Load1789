do run
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=213.652928, duration=0.000217199325562
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.31266021729e-05
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.31673431396e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.29832458496e-05
executed snippet estimated_duration=0.0, duration=0.00239682197571
script duration name:co2 seconds:0.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000113964080811
executed snippet estimated_duration=4.0, duration=0.000904083251953
Script duration 214.0
Run total estimated duration= 215.000
run duration: 0:03:35
doing event level: 2
01:19:41 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4984741328
close session 4984741328
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run 25399-09
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run 25399-09
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
01:19:41 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
GetData ===>> H2,-0.154625307966637,H1,0.0866018375366597,AX,0.00600979455222342,L1,-0.00611175696992466,L2,0.0...
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.15463,0.08660,0.00601,-0.00611,0.06648,0.00268
01:19:41 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
01:19:41 -- ******* Pre Extraction Check Passed *******
=================================================================================
01:19:41 -- stopping status monitor
stop 5049958224
Alive clients [4981511088]
01:19:41 -- starting status monitor
start 5049958224
Monitor already running
start extraction
do extraction
Analysis started at 01:19:41.533993
Extraction Started jan_co2.py
01:19:41 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12c1c8230>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.79221343994e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.3936920166e-05
executed snippet estimated_duration=100.0, duration=0.00301384925842
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.60147857666e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.0309891700745
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000111103057861
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
closing name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
01:19:42 -- CLOSE  VALVE-R (Jan Inlet)
---------------------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
opening name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
01:19:42 -- OPEN   VALVE-O (Jan Ion Pump)
---------------------------------------- open None (Jan Ion Pump) result=[(True, True)], time=0.09 sec
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
closing name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=3
01:19:43 -- CLOSE  VALVE-L (Microbone to Minibone)
---------------------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
opening name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
01:19:43 -- OPEN   VALVE-U (Microbone to Turbo)
---------------------------------------- open None (Microbone to Turbo) result=[(True, True)], time=0.14 sec
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
opening name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
01:19:44 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
---------------------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)], time=0.42 sec
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
opening name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
01:19:44 -- OPEN   VALVE-K (Microbone to Getter D-50)
---------------------------------------- open None (Microbone to Getter D-50) result=[(True, True)], time=0.40 sec
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
opening name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
01:19:45 -- OPEN   VALVE-M (Microbone to Getter NP-10)
---------------------------------------- open None (Microbone to Getter NP-10) result=[(True, True)], time=0.14 sec
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
closing name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
---------------------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
opening name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
01:19:45 -- OPEN   VALVE-A (CO2 Laser to Jan)
---------------------------------------- open None (CO2 Laser to Jan) result=[(True, True)], time=0.12 sec
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
opening name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
01:19:46 -- OPEN   VALVE-T (Microbone to CO2 Laser)
---------------------------------------- open None (Microbone to CO2 Laser) result=[(True, True)], time=0.40 sec
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=4.89131093025
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '1.25') {}
setting motor "beam" to 1.25
set motor beam to 1.25
SetMotor beam,1.25 ===>> OK
GetMotorMoving beam ===>> False
GetMotorMoving beam ===>> False
Block completed
move_to_position ('100',) {'autocenter': True}
FusionsCO2 move to position 100
sending GoToHole 100,True
GoToHole 100,True ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> False
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> False
Block completed
GetAutoCorrecting ===>> False
GetAutoCorrecting ===>> False
Block completed
update position
GetPosition ===>> 11.96340,1.99390,1.00000
got position (11.9634, 1.9939, 1.0)
move to position succeeded
sleep (5,) {}
SLEEP 5.0
block started
WaitControl setup for 5.0  
Join finished
block finished. duration 5.04704499245
close () {'description': 'Microbone to Turbo'}
closing name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=3
01:19:57 -- CLOSE  VALVE-U (Microbone to Turbo)
---------------------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
enable laser
enable () {}
set extraction state FusionsCO2 Enabled (False, 'red', 1.5)
enabling laser
Enable ===>> OK
begin interval
BEGIN INTERVAL Interval 1 waiting for 30.0
block started
set extract to 5.0
WaitControl setup for 30.0  
extract (5.0,) {}
GetPosition ===>> 11.96340,1.99390,1.00000
set extraction state FusionsCO2 ON! 5.0(watts) (0.75, 'red', 1.5)
extract sample to 5.0 (watts)
set laser output
SetLaserOutput 5.0,watts ===>> OK
executing pattern triangle.lp
execute_pattern ('triangle.lp',) {}
executing pattern triangle.lp
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> False
IsPatterning ===>> False
Block completed
COMPLETE INTERVAL waiting for Interval 1 to complete
Join finished
block finished. duration 30.1315181255
Interval 1 finished
end_extract () {}
ending extraction. set laser power to 0
set laser power 0
SetLaserPower 0 ===>> OK
disable () {}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
State checksums do not match. Local:38271967 Remote:777293942
State checksum failed
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
Join finished
block finished. duration 30.1041789055
executed snippet estimated_duration=166.5, duration=77.5206019878
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 100
create new session 4981261616
close session 4981261616
Extraction Finished
01:20:59 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
01:20:59 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.370811206739
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.8047 5.8795 5.9931 6.1446 6.2313 6.3728
Ar39     5.7039 5.7718 5.8855 6.0306 6.1164 6.2593
Ar36     5.3814 5.4408 5.5489 5.6895 5.7714 5.9104
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.147042666178
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=25399 analysis type=unknown
Measurement Started jan_unknown120_60.py
01:20:59 -- ******* Measurement Started jan_unknown120_60.py *******
state changed from extraction to measurement
setting spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.097049
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/1d/b5f451-5c40-4a33-a599-7e44041b6cdd.h5
flush and close file /Users/jan/PychronDev/data/isotopes/1d/b5f451-5c40-4a33-a599-7e44041b6cdd.h5
testing...
no interpolation path defined
executed snippet estimated_duration=226.132928, duration=0.000295162200928
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=PM41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar40 blank 1.052+/-0.008
 - setting Ar36 blank 0.00748+/-0.00021
 - setting Ar37 blank 0.051+/-0.005
 - setting Ar38 blank 0.0173+/-0.0021
 - setting PM41 blank 0.02+/-0.06
 - setting Ar39 blank 0.047+/-0.008
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to PM41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57113999]
H1 map mass to dac 39.9624 >> 5.87953
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.879495376) on H1
setting magnet DAC
current  : 5.879500
requested: 5.879495
Delta Dac: 0.000004
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.879495376 ===>> OK
Magnet settling time: 0.500
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
Equilibration Started
01:21:01 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=3
01:21:01 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x17f43e350>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x178c290b0>"
setting label 0 H2 PM41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x162a77830>"
setting label 0 H2 PM41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
set states for children of R. state=True
handle state [('R', True)]
update switch state R True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=3
01:21:04 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 12.0sec
set_time_zero () {}
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/PM41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/1d/b5f451-5c40-4a33-a599-7e44041b6cdd.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
GetData ===>> H2,-0.154072663988652,H1,4.72203669629458,AX,1.26204331668817,L1,5.16100994427977E-05,L2,-0.00018...
GetData ===>> H2,0.75501181593599,H1,379.633949814203,AX,100.649462873206,L1,0.51575043701808,L2,0.518366865471...
GetData ===>> H2,0.647495331404169,H1,750.639502389703,AX,191.681436107596,L1,1.53524055936313,L2,0.56676020330...
GetData ===>> H2,0.199510189797796,H1,870.725255460792,AX,217.344889085533,L1,2.18885688454422,L2,0.60710282916...
GetData ===>> H2,0.0379468653950206,H1,912.540228311779,AX,225.385741375421,L1,2.58173215267323,L2,0.6160472842...
GetData ===>> H2,0.0439657324991008,H1,928.969097172477,AX,228.74464218419,L1,2.83816748230772,L2,0.51787551371...
GetData ===>> H2,-0.0416931549194076,H1,935.838433074604,AX,230.090558620704,L1,2.9497827388663,L2,0.5263088302...
GetData ===>> H2,-0.0759352082718934,H1,938.895438933993,AX,230.528331247635,L1,3.0178986450468,L2,0.5324800194...
GetData ===>> H2,-0.0375483358005666,H1,940.093097665131,AX,231.085919932462,L1,3.02483562717135,L2,0.538445879...
GetData ===>> H2,0.0397674029240306,H1,940.637709721097,AX,231.008095202848,L1,3.05321237679687,L2,0.5191096112...
GetData ===>> H2,-0.0356151999441452,H1,940.906017436531,AX,230.78196162605,L1,3.11417715672434,L2,0.5255546009...
Equilibration Finished
01:21:16 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
GetData ===>> H2,-0.0113206535863123,H1,940.535582293566,AX,231.109716364236,L1,3.15211843938502,L2,0.619513198...
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
01:21:17 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
01:21:17 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000149965286255
executed snippet estimated_duration=4.0, duration=0.00156211853027
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000140905380249
Pump Microbone
close () {'description': 'Jan Inlet'}
closing name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
measurement finished
estimated time: 12.583 actual time: :12.676
flush and close file /Users/jan/PychronDev/data/isotopes/1d/b5f451-5c40-4a33-a599-7e44041b6cdd.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
set "Ar40" to "('Linear', 'SEM')"
No fit for "PM41". defaulting to linear. check the measurement script "jan_unknown120_60.py"
set "PM41" to "linear"
set "Ar36" to "('Linear', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Linear', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
set "H1" to "('average', 'SEM')"
set "H2" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 120}
01:21:17 -- CLOSE  VALVE-R (Jan Inlet)
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
---------------------------------------- close None (Jan Inlet) result=[(True, True)]
add group /signal/PM41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/1d/b5f451-5c40-4a33-a599-7e44041b6cdd.h5
measuring signal. ncounts=120
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
opening name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
01:21:18 -- OPEN   VALVE-A (CO2 Laser to Jan)
---------------------------------------- open None (CO2 Laser to Jan) result=[(True, True)], time=0.14 sec
starting measurement
GetData ===>> H2,0.070011177433176,H1,940.638321640313,AX,231.097183583547,L1,3.1423014157987,L2,0.530902899993...
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
"signal" increment series count="2" fit count="1" regressing="True"
GetData ===>> H2,0.126460351839504,H1,940.436461223533,AX,230.88993074387,L1,3.14803138764321,L2,0.552802037715...
close () {'description': 'CO2 Laser to Roughing'}
closing name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
---------------------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
opening name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
01:21:19 -- OPEN   VALVE-U (Microbone to Turbo)
---------------------------------------- open None (Microbone to Turbo) result=[(True, True)], time=0.16 sec
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
opening name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
01:21:20 -- OPEN   VALVE-M (Microbone to Getter NP-10)
---------------------------------------- open None (Microbone to Getter NP-10) result=[(True, True)], time=0.14 sec
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
opening name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
GetData ===>> H2,0.0434822316282859,H1,940.270015966938,AX,230.833004831142,L1,3.15442063865926,L2,0.4849378337...
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
01:21:20 -- OPEN   VALVE-K (Microbone to Getter D-50)
---------------------------------------- open None (Microbone to Getter D-50) result=[(True, True)], time=0.41 sec
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
opening name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
01:21:21 -- OPEN   VALVE-T (Microbone to CO2 Laser)
---------------------------------------- open None (Microbone to CO2 Laser) result=[(True, True)], time=0.42 sec
GetData ===>> H2,0.0361429659796744,H1,939.331794278036,AX,230.928043597179,L1,3.15187978050353,L2,0.5831559251...
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
opening name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
01:21:22 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
---------------------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)], time=0.42 sec
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.0139192735770483,H1,939.237984230447,AX,230.718333251415,L1,3.15881398116856,L2,0.499343106...
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=5.99212193489
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=6.00662684441
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
01:21:23 -- ******* Post Equilibration Finished *******
GetData ===>> H2,-0.0478490537004498,H1,938.732764264268,AX,230.679302700233,L1,3.1492340472023,L2,0.5713104783...
GetData ===>> H2,-0.214073554748128,H1,938.518570918682,AX,230.197627392285,L1,3.14641277900669,L2,0.5376344095...
GetData ===>> H2,-0.088010848895139,H1,938.178538875459,AX,230.35598449411,L1,3.15153151381857,L2,0.48492641088...
GetData ===>> H2,-0.147540714933048,H1,938.051930741719,AX,230.415987958991,L1,3.17639443854973,L2,0.5505616040...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.108036165277642,H1,937.629924607563,AX,230.389086885716,L1,3.1455876109871,L2,0.61681366382...
GetData ===>> H2,-0.162628192878207,H1,937.193171230809,AX,229.985980926793,L1,3.11613627348006,L2,0.5804002417...
GetData ===>> H2,-0.192208136386304,H1,936.583576852766,AX,229.597270151489,L1,3.11374076477778,L2,0.4732529887...
GetData ===>> H2,-0.125370954403902,H1,936.580528271122,AX,229.61878343084,L1,3.14420532078899,L2,0.35115924683...
GetData ===>> H2,-0.183784170259877,H1,936.10898049204,AX,229.979680576213,L1,3.13786341783413,L2,0.58706661570...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.148848151474504,H1,935.757262373514,AX,229.886900649201,L1,3.14666103427443,L2,0.5522990786...
GetData ===>> H2,-0.107350236540444,H1,935.715828560816,AX,229.739561199163,L1,3.1566788734886,L2,0.56999567822...
GetData ===>> H2,-0.101811231403848,H1,935.113226086792,AX,229.598913274487,L1,3.15781995517666,L2,0.5779304850...
GetData ===>> H2,-0.145178032498638,H1,934.86426899755,AX,229.648946143228,L1,3.10671087805006,L2,0.56854370248...
GetData ===>> H2,-0.14634795279647,H1,934.529252944679,AX,229.37480769452,L1,3.1515370638036,L2,0.5026905575062...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.16441979461656,H1,934.001462963975,AX,229.188094781756,L1,3.1412510708877,L2,0.435767892190...
GetData ===>> H2,-0.168663423748488,H1,933.709773230562,AX,229.144444751937,L1,3.07720607250038,L2,0.5674232952...
GetData ===>> H2,-0.15665459091204,H1,933.197384525338,AX,229.230237681532,L1,3.06026928679854,L2,0.55029869947...
GetData ===>> H2,-0.25778769312165,H1,932.46781867636,AX,229.045128974659,L1,3.0796119574855,L2,0.5174412979785...
GetData ===>> H2,-0.273585970552705,H1,931.926368408696,AX,229.077219066364,L1,3.10609063510805,L2,0.4600392932...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
01:21:43 -- collecting point 25
GetData ===>> H2,-0.13410915570138,H1,931.943979781236,AX,228.667697838494,L1,3.08992744791678,L2,0.55488248724...
GetData ===>> H2,-0.145503622900937,H1,931.531905985577,AX,228.766040204595,L1,3.10314361011749,L2,0.4696210396...
GetData ===>> H2,-0.113364777258476,H1,931.119921914228,AX,228.790948407225,L1,3.10305910963412,L2,0.4663661078...
GetData ===>> H2,-0.0842882861152708,H1,931.212031707241,AX,228.697437927091,L1,3.12190608516398,L2,0.569732720...
set states for children of Q. state=False
handle state [('Q', False)]
update switch state Q False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.0178554900001896,H1,931.164019460577,AX,228.54709470655,L1,3.10918110240658,L2,0.6155668703...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.109563445246896,H1,930.187367344247,AX,228.484004364435,L1,3.0890599104404,L2,0.60634796446...
set states for children of I. state=True
handle state [('I', True)]
update switch state I True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.171743918062317,H1,930.223546453551,AX,228.354247475369,L1,3.07143757705549,L2,0.5375772640...
State checksums do not match. Local:1814532534 Remote:611344307
State checksum failed
GetData ===>> H2,-0.0159942107461127,H1,929.697032077208,AX,228.363297257615,L1,3.09073001236998,L2,0.495790137...
set states for children of B. state=False
set states for children of D. state=False
handle state [('B', False), ('D', False)]
update switch state B False args=() kw={'refresh': True} ncanvase=3
update switch state D False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.0146748281262334,H1,929.415539985384,AX,228.102129909001,L1,3.10732700034615,L2,0.410252925...
GetData ===>> H2,-0.123627971959656,H1,928.953014262029,AX,227.98345850202,L1,3.12768696956732,L2,0.48050587739...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.106534373875901,H1,928.967212958438,AX,228.022021223801,L1,3.1013761542182,L2,0.60059517548...
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.18790591410868,H1,928.499559614303,AX,227.774942890041,L1,3.06442721647737,L2,0.55084737075...
GetData ===>> H2,-0.140151135681247,H1,927.842677296777,AX,227.779876622383,L1,3.05674720550682,L2,0.4682619494...
GetData ===>> H2,-0.199780521380372,H1,927.864661085941,AX,227.669296183767,L1,3.08609746323427,L2,0.5593864721...
GetData ===>> H2,-0.203850491829764,H1,927.654388258128,AX,227.763666220264,L1,3.08992606423286,L2,0.5245146886...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.197370743163446,H1,926.758132070234,AX,227.819577224159,L1,3.10569553708741,L2,0.4914947633...
GetData ===>> H2,-0.241053039553313,H1,926.214574347463,AX,227.746123134016,L1,3.11152303853637,L2,0.4845608810...
GetData ===>> H2,-0.17589661359613,H1,925.933508562632,AX,227.589823501925,L1,3.08323210046583,L2,0.48992974114...
GetData ===>> H2,-0.0982980514627367,H1,925.833462375881,AX,227.626032961908,L1,3.06578401679698,L2,0.393745515...
GetData ===>> H2,-0.0294715157801771,H1,925.009606047906,AX,227.435816701934,L1,3.05950478817628,L2,0.596203616...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.0572253810902845,H1,925.122345546081,AX,227.218001191731,L1,3.043463806555,L2,0.52049227648...
GetData ===>> H2,-0.136752664400667,H1,925.319920859794,AX,227.306859421196,L1,3.0053889590024,L2,0.52403473283...
GetData ===>> H2,-0.229780397083234,H1,924.770083118869,AX,227.400403618216,L1,3.01686797585927,L2,0.5193838573...
GetData ===>> H2,-0.152014818652386,H1,923.931182094196,AX,227.138871921328,L1,3.03415780947996,L2,0.5211093401...
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.00250921005154081,H1,923.992121000831,AX,227.269818038211,L1,3.06043104070437,L2,0.48526909...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
01:22:09 -- collecting point 50
GetData ===>> H2,-0.0855491829687203,H1,923.753520335479,AX,227.111998851201,L1,3.05640030794778,L2,0.356982478...
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.056300303998156,H1,923.420280897919,AX,226.871676483608,L1,3.03346616596515,L2,0.4981206877...
GetData ===>> H2,-0.0618659090041401,H1,922.801559254192,AX,226.918102057151,L1,3.0700812698178,L2,0.5558998663...
GetData ===>> H2,-0.121066424457772,H1,922.73302362721,AX,226.784266517517,L1,3.052366830797,L2,0.5370629557785...
GetData ===>> H2,-0.127096094701058,H1,922.254866967164,AX,226.6799191393,L1,3.03618051692812,L2,0.560163830995...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.0296684801148608,H1,921.863639633136,AX,226.295118400158,L1,3.05151996498518,L2,0.550550173...
GetData ===>> H2,-0.163116962369922,H1,921.277145611792,AX,226.380671085843,L1,3.03784865327188,L2,0.5199323518...
GetData ===>> H2,-0.193949592745104,H1,920.973484742927,AX,226.315186289953,L1,3.07114722272258,L2,0.6086240139...
GetData ===>> H2,-0.118830345878148,H1,920.673965094035,AX,226.158871279773,L1,3.04625927446388,L2,0.5974844670...
GetData ===>> H2,-0.0279595313757806,H1,920.511630905659,AX,226.048444657642,L1,3.03527612285882,L2,0.478267131...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.140763401136367,H1,920.368904212908,AX,225.820814725678,L1,3.06607586716117,L2,0.5141733163...
GetData ===>> H2,-0.0481178316210773,H1,919.462432551739,AX,225.887215548622,L1,3.04228115209168,L2,0.504587117...
GetData ===>> H2,-0.0956180985053111,H1,919.001224483957,AX,225.859912307474,L1,3.01544560989536,L2,0.508231816...
GetData ===>> H2,-0.165997843624662,H1,918.767944224207,AX,225.93695979258,L1,3.03338885907558,L2,0.53357716133...
GetData ===>> H2,-0.0965132920440038,H1,918.301770216184,AX,225.840939047304,L1,3.01551596530658,L2,0.515487351...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.185938292330314,H1,918.626967334725,AX,225.755968871664,L1,3.01238349451995,L2,0.4829617041...
State checksums do not match. Local:-2143241606 Remote:611344307
State checksum failed
GetData ===>> H2,-0.149681428540032,H1,918.117727077386,AX,225.192283908737,L1,3.00635878231837,L2,0.5532021206...
set states for children of C. state=False
set states for children of X. state=False
handle state [('C', False), ('X', False)]
update switch state C False args=() kw={'refresh': True} ncanvase=3
update switch state X False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.093272113174529,H1,917.794209297308,AX,225.367845383512,L1,3.04792596348941,L2,0.5331428745...
GetData ===>> H2,-0.202296283761116,H1,917.445144567328,AX,225.418058140996,L1,3.04241516178105,L2,0.6089442664...
GetData ===>> H2,-0.156938283283536,H1,916.822173745986,AX,225.278765298602,L1,3.03761526544571,L2,0.5563113935...
set states for children of P. state=False
handle state [('P', False)]
update switch state P False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.133485711721329,H1,916.829097385015,AX,225.398357088837,L1,2.99778769774941,L2,0.4521256527...
State checksums do not match. Local:610848153 Remote:-1891236928
State checksum failed
GetData ===>> H2,-0.137619276657587,H1,916.89294537066,AX,225.117472928479,L1,2.99682686334575,L2,0.55373937752...
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.0993500886337405,H1,916.361091021711,AX,225.393676170243,L1,3.04010820090973,L2,0.518972488...
GetData ===>> H2,-0.138933264423734,H1,915.411299569167,AX,224.990707275441,L1,3.0176116489617,L2,0.63423761854...
GetData ===>> H2,-0.0792907258260035,H1,915.498799944358,AX,224.748080845945,L1,3.01982501440796,L2,0.590691579...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
01:22:36 -- collecting point 75
GetData ===>> H2,-0.132612021086058,H1,915.369183879439,AX,224.704862821789,L1,3.01031081936545,L2,0.5391887811...
GetData ===>> H2,-0.0921761607948672,H1,914.768290764792,AX,224.829938094721,L1,3.03682813406293,L2,0.474566463...
GetData ===>> H2,-0.141579703669278,H1,914.368708969832,AX,224.648460327528,L1,3.04771604856782,L2,0.4574698578...
GetData ===>> H2,-0.137448933765945,H1,914.372428970206,AX,224.604688255563,L1,3.02453741434223,L2,0.4297456105...
GetData ===>> H2,-0.207022947526508,H1,914.06928559844,AX,224.445700939226,L1,3.01927439332208,L2,0.52970293516...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.201844674161934,H1,913.725710275737,AX,224.232550455129,L1,2.99469180831985,L2,0.5621872799...
GetData ===>> H2,-0.22033511519867,H1,913.599588308967,AX,224.064808048818,L1,2.9973010671957,L2,0.450926673271...
GetData ===>> H2,-0.162948190757184,H1,913.037449631077,AX,224.077358371285,L1,3.00153530084667,L2,0.4965898300...
GetData ===>> H2,-0.114936110116301,H1,912.632197277399,AX,224.299376773192,L1,3.03094291456391,L2,0.4987033340...
GetData ===>> H2,-0.144818656305265,H1,911.898029505476,AX,224.36492571486,L1,3.00811857290424,L2,0.43672783541...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.11254721922506,H1,912.187980350371,AX,224.153774379266,L1,2.97478941520798,L2,0.57520925254...
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.08752353966247,H1,911.421777793882,AX,223.913538589039,L1,3.003293700763,L2,0.6177058746116...
GetData ===>> H2,-0.101896508973504,H1,911.068645726562,AX,223.797382756088,L1,3.03108231400364,L2,0.5981592077...
GetData ===>> H2,-0.146628931844034,H1,911.058579127321,AX,223.658571520962,L1,3.02355170990305,L2,0.5081746887...
State checksums do not match. Local:610848153 Remote:-1731030918
State checksum failed
GetData ===>> H2,-0.182526847601978,H1,911.048645162129,AX,223.700686328729,L1,3.00951659909962,L2,0.5997374333...
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.146088581342245,H1,910.065720027335,AX,223.465490355547,L1,3.04292496537537,L2,0.5252689096...
GetData ===>> H2,-0.00399049786189913,H1,909.994385934756,AX,223.503085671483,L1,3.04464105442202,L2,0.50472421...
GetData ===>> H2,-0.159117074180503,H1,909.411373182815,AX,223.57874533209,L1,2.99453744905479,L2,0.48549755411...
GetData ===>> H2,-0.138475008197283,H1,909.113237521314,AX,223.368263902275,L1,2.99274592970961,L2,0.5743974712...
GetData ===>> H2,-0.0996181597545096,H1,908.501977813802,AX,223.057315745068,L1,2.9640608266695,L2,0.4891072579...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.156060164822899,H1,907.716019670087,AX,223.122357404453,L1,3.01894596514033,L2,0.5004741434...
GetData ===>> H2,-0.233307895938566,H1,907.689144810519,AX,223.219387991185,L1,3.02988850184158,L2,0.6077662000...
GetData ===>> H2,-0.11644903998463,H1,907.383091381327,AX,223.12352737917,L1,3.0201148254959,L2,0.4137946776653...
GetData ===>> H2,-0.12528577218865,H1,907.412409792992,AX,223.256474191338,L1,2.99336052738686,L2,0.52014946506...
GetData ===>> H2,-0.115043023228583,H1,906.984138562045,AX,223.128481174516,L1,3.00472682191754,L2,0.6261571192...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
01:23:02 -- collecting point 100
GetData ===>> H2,-0.158872605797361,H1,906.270555948653,AX,222.872056209525,L1,3.00194625980147,L2,0.4768736535...
GetData ===>> H2,-0.141306708367144,H1,906.421382354067,AX,222.732520584477,L1,2.98505415941802,L2,0.4663546871...
GetData ===>> H2,-0.123934940185898,H1,905.976361940906,AX,222.843465033675,L1,2.97898596178277,L2,0.4258833216...
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.111292342652092,H1,905.604412274991,AX,222.696199481338,L1,2.98789230680608,L2,0.4939165998...
GetData ===>> H2,-0.167914425347774,H1,905.237463501646,AX,222.299678002067,L1,3.01613814647199,L2,0.4738469054...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.208130536822334,H1,905.232917419205,AX,222.198388750903,L1,3.01717978845095,L2,0.6444677980...
GetData ===>> H2,-0.172623520009719,H1,904.85588337598,AX,222.49902644105,L1,2.99856662494909,L2,0.521806398251...
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.143208078751349,H1,904.928244399731,AX,222.419952764218,L1,2.9525678916696,L2,0.59199522767...
GetData ===>> H2,-0.0708675308441591,H1,904.009273403122,AX,222.364412795232,L1,2.95250874317113,L2,0.404243670...
GetData ===>> H2,-0.0917168860430121,H1,903.502658269855,AX,222.177452666921,L1,2.97476325182707,L2,0.504575692...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.104859168688599,H1,903.561995955305,AX,222.104068840232,L1,2.96725572165347,L2,0.5612384257...
GetData ===>> H2,-0.11937283492472,H1,903.790337939113,AX,222.065747614068,L1,2.96359956784359,L2,0.44737549825...
GetData ===>> H2,-0.131318943686658,H1,903.463783046248,AX,222.031033624243,L1,2.97048014108746,L2,0.4682162660...
GetData ===>> H2,-0.156266866520972,H1,902.821628968811,AX,221.873567789587,L1,3.01438619186463,L2,0.5335543040...
GetData ===>> H2,-0.133376165965165,H1,902.413533575021,AX,221.652195807864,L1,2.99616797282278,L2,0.4807229014...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.131965500805831,H1,901.982867781743,AX,221.622011885607,L1,2.9864945150026,L2,0.61709962792...
GetData ===>> H2,-0.0969073715357753,H1,901.618037907537,AX,221.771894440776,L1,2.99995090109404,L2,0.523406222...
GetData ===>> H2,-0.097117270842008,H1,900.928584092551,AX,221.713649382926,L1,2.988050709686,L2,0.479500719926...
GetData ===>> H2,-0.13295690700511,H1,900.938558723526,AX,221.455803348985,L1,2.9953368318213,L2,0.544777869332...
GetData ===>> H2,-0.149763807549098,H1,900.543829263609,AX,221.398193400147,L1,2.9963912746119,L2,0.49673834502...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.0273821259238223,H1,900.647747649917,AX,221.510654108347,L1,2.95132858763166,L2,0.630945904...
measurement finished
estimated time: 125.829 actual time: :126.391
flush and close file /Users/jan/PychronDev/data/isotopes/1d/b5f451-5c40-4a33-a599-7e44041b6cdd.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 60}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/1d/b5f451-5c40-4a33-a599-7e44041b6cdd.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57113999]
H1 map mass to dac 34.2 >> 5.24018599104
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.24015513208) on H1
setting magnet DAC
current  : 5.879495
requested: 5.240155
Delta Dac: 0.639340
Checking detector protection. dv=0.63934
Checking detector "CDD". Protection Threshold: 0.1 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.24015513208 ===>> OK
Magnet settling time: 0.500
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
Delaying 15.0s for detectors to settle
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
Join finished
measuring baseline. ncounts=60
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
GetData ===>> H2,-0.0496923627176257,H1,-0.133521761848532,AX,-0.0824693950126095,L1,-0.0485855482388646,L2,-0....
State checksums do not match. Local:-1731030918 Remote:610848153
State checksum failed
GetData ===>> H2,-0.169081761661822,H1,-0.0653737255042362,AX,0.0575506620940209,L1,-0.0695618846471865,L2,-0.0...
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.184058010646502,H1,-0.0589720542367942,AX,-0.13630978308976,L1,-0.0596662691389794,L2,0.055...
GetData ===>> H2,-0.205695583893162,H1,-0.131721216582936,AX,-0.127536175389064,L1,-0.00852832189699891,L2,-0.0...
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.208975303910311,H1,-0.0273033890071382,AX,-0.086954990780105,L1,-0.0539873006964193,L2,-0.0...
GetData ===>> H2,-0.215095622186367,H1,-0.0634544592268636,AX,-0.111245477704133,L1,-0.0691865220481921,L2,-0.0...
GetData ===>> H2,-0.071811282275705,H1,-0.0526057403701817,AX,-0.100885677746415,L1,-0.0442452926359879,L2,-0.0...
GetData ===>> H2,-0.277904230483767,H1,0.00866986960816902,AX,-0.212532331851989,L1,-0.069224776203968,L2,-0.00...
GetData ===>> H2,-0.221092213776625,H1,-0.0131112402793175,AX,0.00875938807812249,L1,-0.0660707096845889,L2,-0....
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.120380632298459,H1,-0.057159961186559,AX,-0.0292639644510559,L1,-0.0304911031938488,L2,0.04...
GetData ===>> H2,-0.202250449579093,H1,0.0118909178880912,AX,-0.143661092452275,L1,-0.0261808437373056,L2,-0.08...
GetData ===>> H2,-0.277027280731537,H1,-0.0715008261554793,AX,-0.0664030065210368,L1,-0.0477119023365392,L2,-0....
GetData ===>> H2,-0.204226543047678,H1,-0.095922057555886,AX,-0.0100105538567973,L1,-0.0276785029553638,L2,-0.0...
GetData ===>> H2,-0.157319230441705,H1,0.052950467969093,AX,-0.173327371843928,L1,-0.0394240469676751,L2,-0.016...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.179832307276285,H1,-0.0145663262600458,AX,-0.135985106774298,L1,-0.0571734857417846,L2,-0.1...
GetData ===>> H2,-0.247771670673714,H1,0.000283700485348604,AX,-0.0817507532159263,L1,-0.0291196395990103,L2,-0...
GetData ===>> H2,-0.149955572760026,H1,0.044632192328309,AX,-0.0646292815604667,L1,-0.0171086505735726,L2,0.084...
GetData ===>> H2,-0.227017923644522,H1,-0.0506981517403247,AX,-0.0197305227073231,L1,-0.0280019680576683,L2,-0....
GetData ===>> H2,-0.262154413993529,H1,-0.127547642669934,AX,-0.126632495494838,L1,-0.0203306475371575,L2,-0.08...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.236037889503102,H1,0.0526759657811351,AX,-0.114953415409027,L1,-0.0289579263231348,L2,0.026...
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.208417522192846,H1,0.0189537272546449,AX,-0.0599919393605517,L1,-0.036540493185899,L2,0.049...
GetData ===>> H2,-0.219024217851779,H1,0.00548471267267661,AX,-0.054345676896119,L1,0.00387726630459444,L2,-0.0...
GetData ===>> H2,-0.25502405673239,H1,0.0322455676864176,AX,-0.120607748320796,L1,0.00766376071268054,L2,-0.012...
GetData ===>> H2,-0.271981816083767,H1,-0.00964041700368663,AX,-0.147800307648013,L1,0.0227842051880211,L2,-0.1...
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
01:24:08 -- collecting point 25
GetData ===>> H2,-0.11822694855958,H1,0.0682402346285695,AX,-0.0944652927883124,L1,-0.0298586960606715,L2,0.022...
GetData ===>> H2,-0.0928982278230016,H1,0.0326512710005613,AX,0.0153030369127791,L1,-0.023645097798334,L2,-0.11...
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.159626253827526,H1,0.0007847036590515,AX,-0.0612324500505847,L1,0.00116662622145543,L2,-0.0...
GetData ===>> H2,-0.174302241420279,H1,0.109553065861268,AX,-0.0649191081102732,L1,0.00783294763966664,L2,0.013...
GetData ===>> H2,-0.237923877171607,H1,0.00930214128020985,AX,-0.12285548609486,L1,0.00949377015519067,L2,-0.01...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.175673873986307,H1,-0.0198974851480791,AX,-0.101731653558465,L1,-0.00419728185553064,L2,-0....
GetData ===>> H2,-0.265288659976271,H1,0.0182736715651501,AX,-0.0463684684761355,L1,-0.0141351557873406,L2,-0.0...
GetData ===>> H2,-0.211794779303927,H1,0.0977905007319758,AX,-0.17031362589293,L1,-0.0484610882579945,L2,-0.004...
GetData ===>> H2,-0.218440799437943,H1,0.0699471996628677,AX,-0.0940133002664794,L1,-0.0440621132063826,L2,-0.0...
GetData ===>> H2,-0.137492195695028,H1,0.00635555075698697,AX,-0.0796527524430223,L1,-0.0222307462765333,L2,0.0...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.158722680589167,H1,0.0170686719518588,AX,-0.00281854400563835,L1,-0.0171638181166618,L2,-0....
GetData ===>> H2,-0.134555417773334,H1,0.0152790953320327,AX,-0.162813629629433,L1,-0.0113579036576794,L2,-0.08...
GetData ===>> H2,-0.129450839440212,H1,-0.0269694792128792,AX,-0.0548210422179126,L1,-0.0267595656992868,L2,0.0...
GetData ===>> H2,-0.217873520790689,H1,-0.00475004937847672,AX,-0.031270275460406,L1,-0.0333711666631845,L2,-0....
GetData ===>> H2,-0.163940531777077,H1,-0.029211423603903,AX,0.0620154618960594,L1,-0.0120220207153426,L2,-0.02...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.118507004666123,H1,0.0271982786182125,AX,-0.11475643477302,L1,-0.0160112333317422,L2,-0.035...
GetData ===>> H2,-0.0120220131237964,H1,0.044035498976558,AX,-0.100259882686323,L1,0.00423025541026601,L2,0.055...
GetData ===>> H2,-0.114992950124099,H1,0.00435144157859848,AX,-0.0650930036258607,L1,-0.0055971875931534,L2,-0....
GetData ===>> H2,-0.2042723692232,H1,0.0550868368039971,AX,0.0104764732183596,L1,-0.0201352227077202,L2,-0.1595...
GetData ===>> H2,-0.0877452144600777,H1,-0.0229505489408808,AX,-0.062785964499569,L1,-0.0361678589951184,L2,-0....
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.159680276850914,H1,-0.0285078400798831,AX,-0.0324763615958876,L1,-0.0256392352550923,L2,0.0...
GetData ===>> H2,-0.218443494280438,H1,0.00404128541002819,AX,-0.193482294724759,L1,-0.0164778002059266,L2,-0.0...
GetData ===>> H2,-0.210012650847706,H1,0.0304079909095869,AX,-0.117850143407903,L1,-0.0219046980592357,L2,-0.01...
GetData ===>> H2,-0.191290124669646,H1,0.0258141965227445,AX,-0.0847643768219049,L1,0.00567332789890012,L2,-0.0...
GetData ===>> H2,-0.266689444152634,H1,-0.112139991471216,AX,-0.0809857415997782,L1,-0.029864684951132,L2,-0.04...
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
01:24:34 -- collecting point 50
GetData ===>> H2,-0.181536540260636,H1,-0.0673048755362114,AX,-0.0148242635719377,L1,-0.0258369496963447,L2,-0....
GetData ===>> H2,-0.189316349538609,H1,0.0661035851387439,AX,-0.0194637584740482,L1,0.00219653549764748,L2,0.07...
GetData ===>> H2,-0.175082580317473,H1,-0.0126699395308847,AX,-0.0223633304880275,L1,-0.0318288485818029,L2,-0....
GetData ===>> H2,-0.204273717049078,H1,-0.000861440209942543,AX,-0.116146877792474,L1,-0.0267332064166125,L2,-0...
GetData ===>> H2,-0.151666461042422,H1,-0.00102843880014341,AX,-0.061139702134734,L1,-0.0210164027938868,L2,-0....
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.122532555118814,H1,0.0236665208092958,AX,-0.120596161909049,L1,0.000396063688620385,L2,-0.0...
GetData ===>> H2,-0.224665519395237,H1,0.0589897065091495,AX,0.0107433202498936,L1,0.0249295893291921,L2,-0.098...
GetData ===>> H2,-0.26136903533132,H1,0.0347275431091588,AX,-0.0919619231995462,L1,-0.00637203029796648,L2,-0.1...
set states for children of C. state=True
set states for children of B. state=True
set states for children of D. state=True
handle state [('C', True), ('B', True), ('D', True)]
update switch state C True args=() kw={'refresh': True} ncanvase=3
update switch state B True args=() kw={'refresh': True} ncanvase=3
update switch state D True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetData ===>> H2,-0.217453096395176,H1,-0.0429005051226337,AX,-0.115660224996211,L1,0.0158203629539787,L2,-0.09...
GetData ===>> H2,-0.095708839942314,H1,-0.0151984471855602,AX,-0.122287763415084,L1,-0.00165128174017919,L2,0.0...
set states for children of P. state=True
handle state [('P', True)]
update switch state P True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing H1>-5.0
evaluate ot="H1.bs>-5.0" t="H1>-5.0", ctx="{'H1': None}"
GetData ===>> H2,-0.0772119394534251,H1,-0.00166064522491001,AX,-0.0510876228036774,L1,0.0212918056955706,L2,-0...
State checksums do not match. Local:-1721677202 Remote:1695186306
State checksum failed
measurement finished
estimated time: 62.915 actual time: :63.226
flush and close file /Users/jan/PychronDev/data/isotopes/1d/b5f451-5c40-4a33-a599-7e44041b6cdd.h5
activate_detectors ('H1', 'AX', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=901.914890895 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x17188aef0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12a9bc470>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x17188aef0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12a9bc470>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x157092d70>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12a9bc470>]
setting integration time = 0.524288
set states for children of I. state=False
set states for children of Q. state=True
handle state [('I', False), ('Q', True)]
update switch state I False args=() kw={'refresh': True} ncanvase=3
SetIntegrationTime 0.524288 ===>> OK
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57113999]
H1 map mass to dac 39.9624 >> 5.87953
update switch state Q True args=() kw={'refresh': False} ncanvase=3
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x129e8aad0>
doing pc
starting peak center. center dac= 5.879495376 step_width=0.001
width = 0.001
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
refresh_canvas_needed fired
Scan parameters center=5.87950 width=0.03000 (5.86450 - 5.89450)
GetData ===>> H2,-0.165316164217091,H1,-0.0325861707312079,AX,-0.0396893724489399,L1,-0.032535374585411,L2,-0.0...
Moving to starting dac 5.864495376
setting magnet DAC
current  : 5.240155
requested: 5.864495
Delta Dac: 0.624340
Checking detector protection. dv=0.62434
Checking detector "CDD". Protection Threshold: 0.1 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.864495376 ===>> OK
Magnet settling time: 0.500
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
Wait until signal near baseline. tol= -0.0244396280484. timeout= 10
GetData ===>> H2,46.7850317436194,H1,24.5345888077176,AX,1.52887501037903,L1,0.0384413910400268,L2,0.0352372045...
GetData ===>> H2,65.2753058978292,H1,36.4423085771881,AX,5.9036545923284,L1,0.0150220329482522,L2,-0.0738489459...
GetData ===>> H2,36.9605151902653,H1,17.4400137454343,AX,2.57313637347324,L1,0.00475736081024613,L2,-0.11645564...
GetData ===>> H2,15.8628460120619,H1,8.76265817279218,AX,1.19942608598019,L1,0.00441395871655405,L2,-0.09692073...
GetData ===>> H2,5.66626235745977,H1,4.57708327077053,AX,0.55463516372377,L1,-0.00964346391768994,L2,0.07554698...
GetData ===>> H2,1.78209723026375,H1,2.58751837106737,AX,0.186403353816725,L1,-0.000637261734608499,L2,-0.10768...
GetData ===>> H2,0.464680613212423,H1,1.66544620595321,AX,0.119001947317003,L1,0.0229689086974766,L2,0.03471322...
GetData ===>> H2,0.177769463379523,H1,1.18660686094707,AX,0.0312463205514196,L1,0.0327196460870878,L2,0.1221214...
GetData ===>> H2,0.20184443682627,H1,1.04041082772508,AX,-0.0648611428693814,L1,0.0294347157343443,L2,0.0284256...
GetData ===>> H2,0.20184443682627,H1,1.04041082772508,AX,-0.0648611428693814,L1,0.0294347157343443,L2,0.0284256...
GetData ===>> H2,0.219016498505008,H1,0.935697669809143,AX,0.0427122461653575,L1,0.0616602855581239,L2,-0.14179...
GetData ===>> H2,0.180661044506495,H1,0.878272716691719,AX,0.113298394092286,L1,0.0394490426645339,L2,0.0249175...
GetData ===>> H2,0.161808964934061,H1,0.75029566408984,AX,0.0946830222475254,L1,0.00240901240467317,L2,0.031592...
GetData ===>> H2,0.146297763758629,H1,0.73892238400497,AX,0.172900782434799,L1,-0.00345466500976637,L2,-0.03515...
GetData ===>> H2,0.218382377889708,H1,0.722020476794261,AX,0.0412267059773697,L1,0.000668514419402487,L2,0.0138...
GetData ===>> H2,0.153533460289718,H1,0.715006780762351,AX,0.111698676945952,L1,0.00521169235051418,L2,-0.06715...
GetData ===>> H2,0.122110020259247,H1,0.796903641745916,AX,0.0595020379623971,L1,0.0124312324595603,L2,-0.07728...
GetData ===>> H2,0.136956343851962,H1,0.6823145778452,AX,-0.000962455198140112,L1,0.0245993806495297,L2,-0.0429...
GetData ===>> H2,0.109883753542735,H1,0.711344533410085,AX,0.0671721703880021,L1,-0.0123001216996728,L2,-0.0189...
GetData ===>> H2,0.0384727317284786,H1,0.728412223510477,AX,0.243659264490872,L1,-0.0055444097596853,L2,-0.0083...
GetData ===>> H2,-0.0433105010654304,H1,0.721086884907041,AX,0.155248181081327,L1,-0.0400097613301061,L2,0.0517...
Peak center failed to move to a baseline position
_do_sweep sm= 5.864495376, em= 5.894495376, stm= 0.001
calculated step values: start=5.864495376, end=5.894495376, width=0.001, nsteps=31.0
setting magnet DAC
current  : 5.864495
requested: 5.864495
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.864495376 ===>> OK
GetData ===>> H2,-0.0433105010654304,H1,0.721086884907041,AX,0.155248181081327,L1,-0.0400097613301061,L2,0.0517...
setting magnet DAC
current  : 5.864495
requested: 5.865530
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.86552985876 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.095983119589005,H1,1.23352414066791,AX,0.266738242057071,L1,-0.0303051756791,L2,0.055105138...
setting magnet DAC
current  : 5.865530
requested: 5.866564
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.86656434152 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.149412730995406,H1,4.12119310616104,AX,0.67265445080793,L1,-0.00871778484447416,L2,0.068117...
setting magnet DAC
current  : 5.866564
requested: 5.867599
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.86759882428 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.166213812703308,H1,20.7876600538253,AX,3.44482545523293,L1,0.0107235875056727,L2,0.03892795...
setting magnet DAC
current  : 5.867599
requested: 5.868633
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.86863330703 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.120743146924825,H1,73.0446407715446,AX,11.6038346134546,L1,0.0568045343405858,L2,0.05761170...
setting magnet DAC
current  : 5.868633
requested: 5.869668
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.86966778979 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.183968576886485,H1,205.156917504695,AX,35.1197684141403,L1,0.175394663019267,L2,-0.03517869...
setting magnet DAC
current  : 5.869668
requested: 5.870702
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.87070227255 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,0.00856592425255156,H1,421.284341954602,AX,80.6666620332465,L1,0.539661639516387,L2,-0.0087901...
setting magnet DAC
current  : 5.870702
requested: 5.871737
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.87173675531 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.114115958334592,H1,636.407288616884,AX,134.463045467756,L1,1.04199365193127,L2,0.0435985499...
setting magnet DAC
current  : 5.871737
requested: 5.872771
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.87277123807 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,0.0104433640761705,H1,774.166161464486,AX,176.460969380644,L1,1.60874859240349,L2,0.2404263294...
setting magnet DAC
current  : 5.872771
requested: 5.873806
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.87380572083 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.0680222431826439,H1,835.318721220196,AX,199.338395807381,L1,2.05062812558167,L2,0.291459107...
setting magnet DAC
current  : 5.873806
requested: 5.874840
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.87484020359 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.174830318680938,H1,855.363420799614,AX,208.361062636096,L1,2.36137280034321,L2,0.3953447462...
setting magnet DAC
current  : 5.874840
requested: 5.875875
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.87587468634 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.0910976342578205,H1,860.79986461001,AX,210.454792450181,L1,2.56545524575012,L2,0.4805629889...
setting magnet DAC
current  : 5.875875
requested: 5.876909
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.8769091691 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.164051236543239,H1,861.632227933501,AX,211.327396626403,L1,2.68041269386475,L2,0.5602095581...
setting magnet DAC
current  : 5.876909
requested: 5.877944
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.87794365186 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.148797464898881,H1,861.892613236448,AX,211.213430913175,L1,2.74564479545619,L2,0.5052612049...
setting magnet DAC
current  : 5.877944
requested: 5.878978
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.87897813462 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.0579023604090231,H1,862.276000975335,AX,211.103589076203,L1,2.80773042369633,L2,0.675413101...
setting magnet DAC
current  : 5.878978
requested: 5.880013
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.88001261738 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.168532521292714,H1,862.167099806957,AX,211.291207030418,L1,2.84273529239275,L2,0.5211664758...
setting magnet DAC
current  : 5.880013
requested: 5.881047
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.88104710014 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.0526871248178173,H1,861.552248750932,AX,211.009118607173,L1,2.88309240079264,L2,0.520526557...
setting magnet DAC
current  : 5.881047
requested: 5.882082
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.8820815829 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.12335615616002,H1,861.008676916291,AX,210.716737171968,L1,2.84271611913136,L2,0.49797217061...
setting magnet DAC
current  : 5.882082
requested: 5.883116
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.88311606565 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.0967732611870386,H1,859.392418793605,AX,209.744451455237,L1,2.80325891201898,L2,0.551453198...
setting magnet DAC
current  : 5.883116
requested: 5.884151
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.88415054841 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.0180740172228079,H1,853.287143282667,AX,206.979403855954,L1,2.81288844165625,L2,0.369739276...
setting magnet DAC
current  : 5.884151
requested: 5.885185
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.88518503117 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.138235590666072,H1,831.155702099733,AX,196.922520942757,L1,2.65990680379675,L2,0.4031281566...
setting magnet DAC
current  : 5.885185
requested: 5.886220
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.88621951393 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.163195271544466,H1,762.80568375966,AX,169.635933136778,L1,2.37495378927262,L2,0.35404162204...
setting magnet DAC
current  : 5.886220
requested: 5.887254
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.88725399669 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.265153187157306,H1,610.400943777911,AX,121.27971818972,L1,1.91148436339768,L2,0.16214851148...
setting magnet DAC
current  : 5.887254
requested: 5.888288
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.88828847945 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.237622258166688,H1,392.803182148507,AX,67.2230726927052,L1,1.36346936803782,L2,0.1279363341...
setting magnet DAC
current  : 5.888288
requested: 5.889323
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.88932296221 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.165501099120263,H1,193.844600827984,AX,28.0261684534721,L1,0.905021506158029,L2,0.021250102...
setting magnet DAC
current  : 5.889323
requested: 5.890357
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.89035744496 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.163921630855243,H1,72.8200387080261,AX,8.73267951035808,L1,0.521355136944571,L2,0.001047590...
setting magnet DAC
current  : 5.890357
requested: 5.891392
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.89139192772 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.150645861204555,H1,21.7041987243606,AX,1.86501433610741,L1,0.35668675736366,L2,-0.012456332...
setting magnet DAC
current  : 5.891392
requested: 5.892426
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.89242641048 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.204741402932707,H1,2.59524851113933,AX,0.0321514761115409,L1,0.151501403415153,L2,-0.057053...
setting magnet DAC
current  : 5.892426
requested: 5.893461
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.89346089324 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.240078485905609,H1,0.420502814670409,AX,-0.0773344669340134,L1,0.0801763512708204,L2,-0.069...
setting magnet DAC
current  : 5.893461
requested: 5.894495
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.894495376 ===>> OK
Magnet settling time: 1.049
GetData ===>> H2,-0.232710744844239,H1,0.00213265321813445,AX,-0.268847122304733,L1,0.0604984446574109,L2,-0.11...
result of _do_sweep=True
result of _calculate_peak_center=([5.8717802906560639, 5.8794134880854045, 5.8870466855147452], [642.20475621175285, 862.27294563193357, 640.94297583840125], 5.8790071581842227, 862.27294563193357)
Failed to find a valid peak. No peak greater than 1.0. max = 0.0255392602355
new center pos Detector(H1) (Ar40) @ 5.87941348809
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.8794481116
update mftable H1 Ar40 5.8794481116 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
locally archiving mftable
setting magnet DAC
current  : 5.894495
requested: 5.879413
Delta Dac: 0.015082
Checking detector protection. dv=0.01508
Checking detector "CDD". Protection Threshold: 0.1 (V)
SetMagnetDAC 5.87941348809 ===>> OK
Magnet settling time: 0.500
sweep finished
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
Failed to find a valid peak. No peak greater than 1.0. max = 0.0255929593469
flush and close file /Users/jan/PychronDev/data/isotopes/1d/b5f451-5c40-4a33-a599-7e44041b6cdd.h5
finished measure script
executed snippet estimated_duration=226.132928, duration=273.288177967
jan_unknown120_60.py completed successfully
Measurement Finished
01:25:32 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
01:25:32 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.78949737549e-05
Pumping spectrometer
open () {'name': 'O'}
opening name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> ERROR: Connection refused: TCP://129.138.12.153:1061, timeout=None
change switch state (None, False)
---------------------------------------- open O () result=[(None, False)], time=10.19 sec
action=open, ok=None, locked=[False]
Failed to open valve Name="O", Description=""
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
invalid checksum "None". error=int() argument must be a string or a number, not 'NoneType'
State checksums do not match. Local:1695186306 Remote:None
State checksum failed
Open O ===>> ERROR: Connection refused: TCP://129.138.12.153:1061, timeout=None
change switch state (None, False)
action=open, ok=None, locked=[False]
Failed to open valve Name="O", Description=""
Failed to open valve Name="O", Description=""
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
State checksums do not match. Local:-1097334291 Remote:-2107522168
State checksum failed
set states for children of Q. state=False
handle state [('Q', False)]
update switch state Q False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of B. state=False
set states for children of D. state=False
set states for children of I. state=True
handle state [('B', False), ('D', False), ('I', True)]
update switch state B False args=() kw={'refresh': True} ncanvase=3
update switch state D False args=() kw={'refresh': True} ncanvase=3
update switch state I True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of C. state=False
handle state [('C', False)]
update switch state C False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
State checksums do not match. Local:-1725866079 Remote:610848153
State checksum failed
set states for children of P. state=False
handle state [('P', False)]
update switch state P False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
State checksums do not match. Local:-1891236928 Remote:610848153
State checksum failed
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
State checksums do not match. Local:-1731030918 Remote:610848153
State checksum failed
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
State checksums do not match. Local:-1731030918 Remote:610848153
State checksum failed
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of C. state=True
set states for children of B. state=True
set states for children of D. state=True
handle state [('C', True), ('B', True), ('D', True)]
update switch state C True args=() kw={'refresh': True} ncanvase=3
update switch state B True args=() kw={'refresh': True} ncanvase=3
update switch state D True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of Q. state=True
set states for children of P. state=True
handle state [('Q', True), ('P', True)]
update switch state Q True args=() kw={'refresh': True} ncanvase=3
update switch state P True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of I. state=False
handle state [('I', False)]
update switch state I False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of E. state=False
set states for children of D. state=False
handle state [('E', False), ('D', False)]
update switch state E False args=() kw={'refresh': True} ncanvase=3
update switch state D False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of C. state=False
handle state [('C', False)]
update switch state C False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of B. state=True
handle state [('B', True)]
update switch state B True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
State checksums do not match. Local:-286040778 Remote:1334048640
State checksum failed
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
State checksums do not match. Local:1032510184 Remote:1459125137
State checksum failed
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of C. state=True
set states for children of B. state=True
set states for children of D. state=True
handle state [('C', True), ('B', True), ('D', True)]
update switch state C True args=() kw={'refresh': True} ncanvase=3
update switch state B True args=() kw={'refresh': True} ncanvase=3
update switch state D True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of D. state=False
handle state [('D', False)]
update switch state D False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
State checksums do not match. Local:-1131948088 Remote:1334048640
State checksum failed
set states for children of C. state=False
handle state [('C', False)]
update switch state C False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of B. state=True
handle state [('B', True)]
update switch state B True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
State checksums do not match. Local:1459125137 Remote:1032510184
State checksum failed
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
State checksums do not match. Local:1459125137 Remote:772584979
State checksum failed
set states for children of C. state=True
set states for children of B. state=True
set states for children of D. state=True
handle state [('C', True), ('B', True), ('D', True)]
update switch state C True args=() kw={'refresh': True} ncanvase=3
update switch state B True args=() kw={'refresh': True} ncanvase=3
update switch state D True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
invalid checksum "None". error=int() argument must be a string or a number, not 'NoneType'
State checksums do not match. Local:-861571959 Remote:None
State checksum failed
invalid checksum "None". error=int() argument must be a string or a number, not 'NoneType'
State checksums do not match. Local:-861571959 Remote:None
State checksum failed
invalid checksum "None". error=int() argument must be a string or a number, not 'NoneType'
State checksums do not match. Local:-861571959 Remote:None
State checksum failed
invalid checksum "None". error=int() argument must be a string or a number, not 'NoneType'
State checksums do not match. Local:-861571959 Remote:None
State checksum failed
invalid checksum "None". error=int() argument must be a string or a number, not 'NoneType'
State checksums do not match. Local:-861571959 Remote:None
State checksum failed
invalid checksum "None". error=int() argument must be a string or a number, not 'NoneType'
State checksums do not match. Local:-861571959 Remote:None
State checksum failed
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
AbortPattern ===>> OK
Failed to open valve Name="O", Description=""
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
AbortPattern ===>> OK
executed snippet estimated_duration=0, duration=19020.416537
Post Measurement Finished unsuccessfully
06:42:33 -- ******* Post Measurement Finished unsuccessfully *******
failed execution step Post Measurement Failed
post_measurement did not complete successfully
state changed from measurement to failed
06:42:33 -- Automated run 25399-09 failed duration: 19371.827 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=91
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
